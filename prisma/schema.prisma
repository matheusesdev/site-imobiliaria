// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // ou "mysql", "sqlite", etc.
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?   // Hash da senha
  image         String?
  accounts      Account[]
  sessions      Session[]
  imoveis       Imovel[]  @relation("CorretorImoveis") // Relação com Imovel
}

model Imovel {
  id             String   @id @default(cuid())
  endereco       String
  cidade         String
  estado         String
  descricao      String
  imagemUrl      String? // URL da imagem no Cloudinary
  quartos        Int
  banheiros      Int
  vagasGaragem   Int
  areaTotal      Float
  areaConstruida Float
  preco          Decimal  @db.Decimal(10, 2) // Melhor tipo para dinheiro

  corretorId String
  corretor   User   @relation("CorretorImoveis", fields: [corretorId], references: [id])

  criadoEm  DateTime @default(now())
  alteradoEm DateTime @updatedAt
}

// Modelos padrão do NextAuth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}